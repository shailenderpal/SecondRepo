# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# parameters:
# - name: Projectname
#   type: string
#   default: fpp-reader-app-app
#   values:
#   - fpp-reader-app-app
#   - fpp-reader-app
#   - fpp-reader-app-apmp
#   - fpp-reader-app-cop
parameters:
- name: Projectname
  type: string
  default: SecondSpringProject
  values:
  - FirstSpringProjects
  - SecondSpringProject
  
trigger:
- master
stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
          name: Azure Pipelines
          demands: maven
        
        steps:
          - task: Maven@3
            displayName: 'Maven FirstSpringProjects/pom.xml'
            inputs:
              mavenPomFile: '${{ parameters.Projectname }}/pom.xml'
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
              goals: clean package
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
            inputs:
              SourceFolder: '$(system.defaultworkingdirectory)'
              Contents: '**/*.jar'
              TargetFolder: '$(build.artifactstagingdirectory)'
            condition: succeededOrFailed()
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
            condition: succeededOrFailed()
  - stage: DeployDev
    displayName: 'Deploy DEV'
    #dependsOn: 'Bundle_Default_Data'
    condition: succeeded()
    jobs:
    - deployment: Web_Jars
      displayName: 'Web Jars'
      pool: 'infyPOc-AzureUserVM'
      environment: 'dev-web'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: current
                downloadType: single
                artifactName: 'Publish Artifact: drop'
                downloadPath: $(Build.artifactstagingdirectory)

            - bash: |
                echo "##########Copying the jar file to a VM#################"
                echo "current directory is "
                pwd
                #cd /home/kumar.sk.16/azagent/azagent/azagent/_work/r1/a/_SpecAnywhereApp-Maven-CI-es/drop/${{ parameters.Projectname }}/target
                cd $(Build.artifactstagingdirectory)/_spring-project-self-agent/drop/${{ parameters.Projectname }}/target
                echo "current directory after the cd "
                pwd
                #cp ${{ parameters.Projectname }}-0.0.1-SNAPSHOT.jar /home/kumar.sk.16/api_jars
                cp ${{ parameters.Projectname }}-0.0.1-SNAPSHOT.jar /home/AzureUser/api_jars
                echo "jar is copied successfully.. "
                cd /home/kumar.sk.16/api_jars
                
                echo "current directory after copy and change directory"
                pwd
              displayName: 'Execute Deploy Script'
